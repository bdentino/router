# Generated automatically by consul-template
#
# TODO: Update template to take advantage of whitespace-trimming
# one new Go is released (see https://github.com/golang/go/issues/9969)
#

{{ $local := or (env "HOSTNAME") "" }}

global
  log 127.0.0.1 local2
  debug
  stats socket /var/run/haproxy.sock mode 777 level admin
  stats socket ipv4@0.0.0.0:9191 mode 777 level admin
  stats timeout 60s
{{ with $maxconn:=key "service/haproxy/maxconn" }}
  maxconn {{ $maxconn }}
{{ else }}
  maxconn 4096
{{ end }}

defaults
  log global
  option httplog
  option log-separate-errors
  option abortonclose
  option redispatch
  option logasap
  option http-server-close
  option forceclose
  option forwardfor
  mode http
{{ range ls "service/haproxy/timeouts" }}
  timeout {{ .Key }} {{ .Value }}
{{ else }}
  timeout connect 5000
  timeout client  50000
  timeout server  50000
{{ end }}

frontend www
  capture request header Host len 64
  capture response header Content-Length len 64
  monitor-uri /health
{{ range services }}{{ if in .Tags "http" }}{{ range service .Name "any" }}{{ if in .Tags "http" }}{{ if eq .Node $local }}
  acl unhealthy nbsrv({{ .Node }}-{{ .Name }}) lt 1
{{ end }}{{ end }}{{ end }}{{ end }}{{ end }}
  monitor fail if unhealthy
  bind *:80

{{ range services }}
{{ if in .Tags "http" }}
  acl local_{{ .Name }} hdr(host) -i {{ .Name }}.router.local
  use_backend {{ .Name }} if local_{{ .Name }}

  {{ if (env "HAPROXY_DOMAIN") }}
  acl external_{{ .Name }} hdr(host) -i {{ .Name }}.{{ env "HAPROXY_DOMAIN" }}
  use_backend {{ .Name }} if external_{{ .Name }}
  {{ end }}

  {{ range service .Name }}
  {{ if in .Tags "http" }}
  acl local_{{ .Node }}_{{ .Name }} hdr(host) -i {{ .Node }}-{{ .Name }}.router.local
  use_backend {{ .Node }}-{{ .Name }} if local_{{ .Node }}_{{ .Name }}

    {{ if (env "HAPROXY_DOMAIN") }}
  acl external_{{ .Node }}_{{ .Name }} hdr(host) -i {{ .Node }}-{{ .Name }}.{{ env "HAPROXY_DOMAIN" }}
  use_backend {{ .Node }}-{{ .Name }} if external_{{ .Node }}_{{ .Name }}
    {{ end }}
  {{ end }}
  {{ end }}
{{ end }}
{{ end }}

{{ range services }}
{{ if in .Tags "http" }}
backend {{ .Name }}
  mode http
  balance roundrobin
{{ if eq .Name "mesos" }}
  option httpchk /master/state.json
  http-check expect string elected_time
  timeout check 10s
{{ end }}
{{ range service .Name }}
{{ if in .Tags "http" }}
  server {{ .Node }} {{ .Address }}:{{ .Port }}
{{ end }}
{{ end }}
{{ end }}
{{ end }}

{{ range nodes }}
{{ $node := .Node }}
{{ range services }}
{{ if in .Tags "http" }}
backend {{ $node }}-{{ .Name }}
{{ range service .Name }}
{{ if in .Tags "http" }}
{{ if eq $node .Node }}
  server {{ .Node }} {{ .Address }}:{{ .Port }}
{{ end }}
{{ end }}
{{ end }}
{{ end }}
{{ end }}
{{ end }}

listen stats 0.0.0.0:9090
  mode http
  balance
  timeout client 5000
  timeout connect 4000
  timeout server 30000

  #This is the virtual URL to access the stats page
  stats uri /

  #Authentication realm. This can be set to anything. Escape space characters with a backslash.
  stats realm HAProxy\ Statistics

  #The user/pass you want to use. Change this password!
  stats auth admin:pass

  #This allows you to take down and bring up back end servers.
  #This will produce an error on older versions of HAProxy.
  stats admin if TRUE
